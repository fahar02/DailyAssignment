
D:\handson>python
Python 3.12.5 (tags/v3.12.5:ff3bc82, Aug  6 2024, 20:45:27) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> ##Functions
>>> def add(x,y):
...     return x+y
...
>>> add(1,2) #pos
3
>>> add(y=2, x = 1)
3
>>> add(1, y=3)
4
>>> def add(x, y=3):
...     return x+3
...
>>> add(2)
5
>>> add(2,3)
5
>>> #var args
>>> def add(*a): # a tuple
...     return sum(a)
...
>>> add()
0
>>> add(1,2)
3
>>> t = (1,2,3)
>>> add(*t)
6
>>> #var args - keyword
>>> def f(**b):
...     print(b)
...
>>> f(x=2, y=3)
{'x': 2, 'y': 3}
>>> d = dict(a=2, b=3)
>>> d
{'a': 2, 'b': 3}
>>> f(**d)
{'a': 2, 'b': 3}
>>> #* and ** usages
>>> a,b = 1,2
>>> a
1
>>> b
2
>>> a, *b, c = 1,2,3
>>> a
1
>>> b
[2]
>>> c
3
>>> a, *b, c = 1,3
>>> a,b,c
(1, [], 3)
>>> #*
>>> lst = [1,2,3]
>>> l2 = [*lst, *lst, *lst]
>>> l2
[1, 2, 3, 1, 2, 3, 1, 2, 3]
>>> l2 = [lst, lst, lst]
>>> l2
[[1, 2, 3], [1, 2, 3], [1, 2, 3]]
>>> #**
>>> d = {'ok': 1, 'nok': 2}
>>> dd = {'new': 2, **d}
>>> dd
{'new': 2, 'ok': 1, 'nok': 2}
>>> #Understand *, **, where we can use
>>> def fn(x,y,/):
...     pass
...
>>> def fn(x,y,/,a,b=2,*c,d,e=2,**f):
...     return(x,y,a,b,c,d,e,f)
...
>>> fn(1,2,3,4,d=3)
(1, 2, 3, 4, (), 3, 2, {})
>>> # before / , all are mandatory positional
>>> #after *, all are mandatory keyword
>>> #* takes positional var args
>>> #** takes keyword var args
>>> #a can be positional or keyword
>>> #b , default, can be positional or keyword
>>> #d,e must be keyword
>>> #x,y must be positional
>>> fn(4,5,6,7,d=66,l2=34)  #e=2,d=66. c=(), f={'l2':34}, x= 4, b=7, y=5, a=6, g=
(4, 5, 6, 7, (), 66, 2, {'l2': 34})
>>> y =(1,2,3,4), d={'e': 2}
  File "<stdin>", line 1
    y =(1,2,3,4), d={'e': 2}
    ^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?
>>> y =(1,2,3,4)
>>> d = {'e':3}
>>> fn(*y, d=3, **d )   #x=1, y=2, a=3, b=4, c=(),d=3, f={d}
(1, 2, 3, 4, (), 3, 3, {})
>>> quit()

D:\handson>python
Python 3.12.5 (tags/v3.12.5:ff3bc82, Aug  6 2024, 20:45:27) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> def p(x):
...     print(x+y)
...
>>> p(2)  #? 2/Error/
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 2, in p
NameError: name 'y' is not defined
>>> y =20
>>> p(2)  #?  Error/22
22
>>> #scope - fn, module, class
>>> #var read - LGB    (LEGB)
>>> #local, global, builtin
>>> #https://docs.python.org/3/library/functions.html
>>> def pp(x):
...     y = x+2
...
>>> pp(2)
>>> y  #? 4/Error /20/idk
20
>>> #var set - local
>>> def ppp(x):
...     global y
...     y = x+2
...
>>> ppp(2)
>>> y
4
>>> quit()

D:\handson>python
Python 3.12.5 (tags/v3.12.5:ff3bc82, Aug  6 2024, 20:45:27) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> x, len = "OK", 20
>>> def y(x):
...     return len(x)*2
...
>>> y(x)    #? OKOK/4/Error/Error
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 2, in y
TypeError: 'int' object is not callable
>>> del len
>>> y(x)
4
>>> 20()
<stdin>:1: SyntaxWarning: 'int' object is not callable; perhaps you missed a comma?
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not callable
>>> quit()

D:\handson>python
Python 3.12.5 (tags/v3.12.5:ff3bc82, Aug  6 2024, 20:45:27) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> def p(x):
...     def p1(y):
...     return x+y
  File "<stdin>", line 3
    return x+y
    ^
IndentationError: expected an indented block after function definition on line 2
>>> def p(x):
... def def p1(y):
KeyboardInterrupt
>>>
>>> def p(x):
...     def p1(y):
...             return x+y
...     return p1
...
>>> p(2)(3)  #?
5
>>> #fn is returning function
>>> #Q-1
>>> def pp(x):
...     return x*x
...
>>> def ppp(x):
...     return x*x*x
...
>>> pp(2)  #? 4/4/4/4
4
>>> ppp(2)  #
8
>>> pp = ppp  #? OK/OK/OK/OK
>>> pp(2)  #?
8
>>> pp
<function ppp at 0x000001BD3BB74400>
>>> pp(2)
8
>>> type(pp)
<class 'function'>
>>> type(pp(2))
<class 'int'>
>>> #function name is a variable
>>> i = 2
>>> #i is a variable
>>> #Usage of variable, - return from fn, fn can take
>>>
>>> def x(y):
...     return y(2)
...
>>> x(pp)   #? 8/8/8
8
>>> #fn can take fn , return fn ....
>>> #fn name is a variable
>>> def add(x,y):
...     return x+y
...
>>> #def (x,y): return x+y
>>> i = 2
>>> 2
2
>>> (2+3) * 5
25
>>> #Lambda fn - fn without name
>>> lambda x,y : x+y   # lambda can have only one expr which is return implicitely
<function <lambda> at 0x000001BD3BB74F40>
>>> type(lambda x,y : x+y)
<class 'function'>
>>> (lambda x,y : x+y)(3,4)
7
>>> (lambda x,y=30 : x+y)(3)
33
>>> (lambda x,y=30 : x+y)(y=3,x=2)
5
>>> (lambda x,y=30,*c : x+y)(2,3,4,5,6)
5
>>> add = lambda x,y : x+y
>>> add(2,3)
5
>>>
>>> #sorting - one lambda
>>> #sorting - fn takes a fn
>>> #fn taking fn - Higher order function
>>> #HOF - in cluster computation - spark/DB
>>> #Q1
>>> (lambda : 2)()
2
>>> (lambda : lambda x: x*2)()(3)
6
>>> def f(x,y,z):
...     return x(y,z)
...
>>> #x -?  fn of two , dt of y and z =
>>> f(lambda x,y: x+y, 2, 3)  # 5/Error/
5
>>> def f(x,y,z):
...     return x(y)[z]
...
>>> #x -> fn  1, dt of return - str,L,T,D  dt of y- something, dt of z - int, keyofdict
>>> f(lambda y: [1,2,3, y], 80, 0)  #? 1
1
>>> f(lambda y, x=2: {x:y}, 20, 2) * f(lambda y: [1,2,3, y], 80, 0) #? 20
20
>>> {2:20}[2] * [1,2,3,80][0]
20
>>> #Q-2
>>> f(lambda x: [x, {x:[x]}], 2, -1)   #?  {2:[2]}
{2: [2]}
>>> #sorting
>>> import random
>>> o = [ random.randint(10,200) for _ in range(10)]
>>> o
[130, 19, 143, 130, 133, 88, 69, 37, 101, 115]
>>> sorted(o)
[19, 37, 69, 88, 101, 115, 130, 130, 133, 143]
>>> sorted(o, reverse=True)
[143, 133, 130, 130, 115, 101, 88, 69, 37, 19]
>>> names = [ 'xyz', 'sunil', 'rahul', 'geetha', 'santosh', 'das', 'bhavya', ]
>>> sorted(names)
['bhavya', 'das', 'geetha', 'rahul', 'santosh', 'sunil', 'xyz']
>>> #whose name is longest?
>>> #sort by key = key is length
>>> def p(e):  # e is each name
...     return len(e)
...
>>> p('xyz')
3
>>> sorted(names, key=p)[-1]
'santosh'
>>> sorted(names, key=p)
['xyz', 'das', 'sunil', 'rahul', 'geetha', 'bhavya', 'santosh']
>>> sorted(names, key=lambda e: len(e))
['xyz', 'das', 'sunil', 'rahul', 'geetha', 'bhavya', 'santosh']
>>> m_names = zip(names, [10, 100, 30, 20, 70, 0, 99])
>>> list(m_names)
[('xyz', 10), ('sunil', 100), ('rahul', 30), ('geetha', 20), ('santosh', 70), ('das', 0), ('bhavya', 99)]
>>> #hwo got higest?
>>> sorted(m_names)
[]
>>> sorted(zip(names, [10, 100, 30, 20, 70, 0, 99]))
[('bhavya', 99), ('das', 0), ('geetha', 20), ('rahul', 30), ('santosh', 70), ('sunil', 100), ('xyz', 10)]
>>> [1,2] > [2,1]  #? False/True/Error/idk
False
>>> [1,2] > [1,3]  #? False
False
>>> def p(t):
...     return t[-1]
...
>>> sorted(zip(names, [10, 100, 30, 20, 70, 0, 99]), key=p)
[('das', 0), ('xyz', 10), ('geetha', 20), ('rahul', 30), ('santosh', 70), ('bhavya', 99), ('sunil', 100)]
>>> sorted(zip(names, [10, 100, 30, 20, 70, 0, 99]), key=lambda t: t[1])
[('das', 0), ('xyz', 10), ('geetha', 20), ('rahul', 30), ('santosh', 70), ('bhavya', 99), ('sunil', 100)]
>>> d = zip(names, [10, 100, 30, 20, 70, 0, 99])
>>> d
<zip object at 0x000001BD3BB9BDC0>
>>> d = dict(zip(names, [10, 100, 30, 20, 70, 0, 99]))
>>> d
{'xyz': 10, 'sunil': 100, 'rahul': 30, 'geetha': 20, 'santosh': 70, 'das': 0, 'bhavya': 99}
>>> sorted(d)
['bhavya', 'das', 'geetha', 'rahul', 'santosh', 'sunil', 'xyz']
>>> sorted(d, key=lambda k: d[k])
['das', 'xyz', 'geetha', 'rahul', 'santosh', 'bhavya', 'sunil']
>>> lst = [0,1.2,True, [12], 1, 10.0, False]
>>> #bool, int, list, float
>>> #hint, use type and is operator
>>> type([1])
<class 'list'>
>>> type([1]) is list
True
>>> #do the sorting
>>> def p(e):
...     if type(e) is bool:
...             return 0
...     elif type(e) is int:
...             return 1
...     elif type(e) is list:
...             return 2
...     else:
...             return 3
...
>>> sorted(lst, key=p)
[True, False, 0, 1, [12], 1.2, 10.0]
>>> #OR
>>> d = {bool: 0, int:1, list:2, float:3}
>>> sorted(lst, key=lambda e: d[type(e)])
[True, False, 0, 1, [12], 1.2, 10.0]
>>> #FH
>>> covid_data = [ 'India': { 'cont': 'asia', 'data':{ '+ive': 20, 'tested': 200}},
  File "<stdin>", line 1
    covid_data = [ 'India': { 'cont': 'asia', 'data':{ '+ive': 20, 'tested': 200}},
                          ^
SyntaxError: invalid syntax
>>> covid_data = { 'India': { 'cont': 'asia', 'data':{ '+ive': 20, 'tested': 200}},
...               'China': { 'cont': 'asia', 'data':{ '+ive': 25, 'tested': 250}},
...              'USA': { 'cont': America', 'data':{ '+ive': 30, 'tested': 300}},}
  File "<stdin>", line 3
    'USA': { 'cont': America', 'data':{ '+ive': 30, 'tested': 300}},}
                            ^^^^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>>
>>> covid_data = { 'India': { 'cont': 'asia', 'data':{ '+ive': 20, 'tested': 200}},
... 'China': { 'cont': 'asia', 'data':{ '+ive': 25, 'tested': 250}},
...  'USA': { 'cont': 'America', 'data':{ '+ive': 30, 'tested': 300}},}
>>> #Which count has most +ive
>>> c = 'India'
>>> covid_data[c]
{'cont': 'asia', 'data': {'+ive': 20, 'tested': 200}}
>>> covid_data[c]['data']
{'+ive': 20, 'tested': 200}
>>> covid_data[c]['data']['+ive']
20
>>> sorted(covid_data, lambda c: covid_data[c]['data']['+ive'])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: sorted expected 1 argument, got 2
>>> sorted(covid_data, key = lambda c: covid_data[c]['data']['+ive'])
['India', 'China', 'USA']
>>> quit()

D:\handson>echo > sorted_ex.py

D:\handson>python sorted_ex.py
{'asia': {'India': {'cont': 'asia', 'data': {'+ive': 20, 'tested': 200}}, 'China': {'cont': 'asia', 'data': {'+ive': 25, 'tested': 250}}}, 'America': {'USA': {'cont': 'America', 'data': {'+ive': 30, 'tested': 300}}}}

D:\handson>python sorted_ex.py
{'asia': {'India': {'cont': 'asia', 'data': {'+ive': 20, 'tested': 200}}, 'China': {'cont': 'asia', 'data': {'+ive': 25, 'tested': 250}}}, 'America': {'USA': {'cont': 'America', 'data': {'+ive': 30, 'tested': 300}}}}
Traceback (most recent call last):
  File "D:\handson\sorted_ex.py", line 22, in <module>
    ans = sorted(ed, lambda cont: sum(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: sorted expected 1 argument, got 2

D:\handson>python sorted_ex.py
{'asia': {'India': {'cont': 'asia', 'data': {'+ive': 20, 'tested': 200}}, 'China': {'cont': 'asia', 'data': {'+ive': 25, 'tested': 250}}}, 'America': {'USA': {'cont': 'America', 'data': {'+ive': 30, 'tested': 300}}}}
['America', 'asia']

D:\handson>python sorted_ex.py
{'asia': {'China': {'cont': 'asia', 'data': {'+ive': 25, 'tested': 250}}, 'India': {'cont': 'asia', 'data': {'+ive': 20, 'tested': 200}}}, 'America': {'USA': {'cont': 'America', 'data': {'+ive': 30, 'tested': 300}}}}
['America', 'asia']

D:\handson>python
Python 3.12.5 (tags/v3.12.5:ff3bc82, Aug  6 2024, 20:45:27) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import xml.etree.ElementTree as ET
>>> path = r"example.xml"
>>> tr = ET.parse(path)
>>> root = tr.getroot()
>>> type(root)
<class 'xml.etree.ElementTree.Element'>
>>> root.tag, root.attrib, root.text
('data', {}, '\n    ')
>>> #Find all ranks
>>> xpath = "./country/rank"
>>> nn = root.findall(xpath)
>>> nn
[<Element 'rank' at 0x000002A3A1F17970>, <Element 'rank' at 0x000002A3A1F17B50>, <Element 'rank' at 0x000002A3A1F17CE0>]
>>> [n.text for n in nn]
['1', '4', '68']
>>> #XML - all STRING
>>> [int(n.text) for n in nn]
[1, 4, 68]
>>> #XPATH
>>> root.findall(".//rank")
[<Element 'rank' at 0x000002A3A1F17970>, <Element 'rank' at 0x000002A3A1F17B50>, <Element 'rank' at 0x000002A3A1F17CE0>]
>>> root.findall("./country[@name='Singapur']")
[]
>>> root.findall("./country[@name='Singapore']")
[<Element 'country' at 0x000002A3A1F17B00>]
>>> [ n for n in root.findall("./country") if n.attrib['name'] == 'Singapore']
[<Element 'country' at 0x000002A3A1F17B00>]
>>> #no compre
>>> [int(n.text) for n in nn]
[1, 4, 68]
>>> #or
>>> o = []
>>> for n inn:
  File "<stdin>", line 1
    for n inn:
          ^^^
SyntaxError: invalid syntax
>>> for n in:
  File "<stdin>", line 1
    for n in:
            ^
SyntaxError: invalid syntax
>>> for n in nn:
...     o.append( int(n.text))
...
>>> o
[1, 4, 68]
>>> [int(n.text) for n in nn]
[1, 4, 68]
>>> #Handson
>>> #get all country names
>>> [n.attrib['name'] for n in root.findall("./country")]
['Liechtenstein', 'Singapore', 'Panama']
>>> #find country and its neighbours
>>> #dict , key = cname, value = list of neighbors
>>> #nested comprehension {cname: [ nn  for n in..] for c...}
>>> ed = {}
>>> for cn in root.findall("./country"):
...     lst = []
...     for n in cn.findall("./neighbor"):
...             lst.append( n.attrib['name'])
...     ed[cn.attrib['name']]= lst
...
>>> ed
{'Liechtenstein': ['Austria', 'Switzerland'], 'Singapore': ['Malaysia'], 'Panama': ['Costa Rica', 'Colombia']}
>>> {cn.attrib['name']: [ n.attrib['name'] for n in cn.findall("./neighbor")] for cn in root.
{'Liechtenstein': ['Austria', 'Switzerland'], 'Singapore': ['Malaysia'], 'Panama': ['Costa Rica', 'Colombia']}
>>> #Creation/updation - pl check ElementTree
>>> #creation - jinja2 file
>>> #DATA - how many types?
>>> #two types - SQL and NOSQL
>>> #SQL - csv, excel, database - 2D data
>>> #NoSQL - json/XML - no high level API
>>> #XML - no dt, xpath, NS processing
>>> #JSON - type
>>> import json
>>> with open("example.json", "rt") as f:
...     obj = json.load(f)
...
>>> obj
[{'empId': 1, 'details': {'firstName': 'John', 'lastName': 'Smith', 'isAlive': True, 'age': 25, 'salary': 123.5, 'address': {'streetAddress': '21 2nd Street', 'city': 'New York', 'state': 'NY', 'postalCode': '10021-3100'}, 'phoneNumbers': [{'type': 'home', 'number': '212 555-1234'}, {'type': 'office', 'number': '646 555-4567'}, {'type': 'mobile', 'number': '123 456-7890'}], 'children': [], 'spouse': None}}, {'empId': 20, 'details': {'firstName': 'Johns', 'lastName': 'Smith', 'isAlive': True, 'age': 25, 'salary': 123.5, 'address': {'streetAddress': '21 2nd Street', 'city': 'New York', 'state': 'CL', 'postalCode': '10021-3100'}, 'phoneNumbers': [{'type': 'home', 'number': '212 555-1234'}, {'type': 'office', 'number': '646 555-4567'}, {'type': 'mobile', 'number': '123 456-7890'}], 'children': [], 'spouse': None}}]
>>> #extract emp id
>>> [emp['empId'] for emp in obj]
[1, 20]
>>> #deep copy
>>> obj1 = json.loads(json.dumps(obj))
>>> obj == obj1
True
>>> obj is obj1
False
>>> id(obj)
2901821643200
>>> id(obj1)
2901821682368
>>> #HAndson-1
>>> #get all full names of emps
>>> #handson-2
>>> #Get all office phone numbers from NY state who are alive
>>> [emp['details']['firstName'] + emp['details']['lastName'] for emp in obj]
['JohnSmith', 'JohnsSmith']
>>> #Q-2
>>> [ ph['number']  for emp in obj for ph in emp['details']['phoneNumbers']
...     if ph['type'] == 'office' and emp['details']['address']['state']=='NY'
...        and emp['details']['isAlive'] ]
['646 555-4567']
>>> o = []
>>> for emp in obj:
...     for ph in emp['details']['phoneNumbers']:
...             if ph['type'] == 'office' and emp['details']['address']['state']=='NY':
...             o.append(ph['number'])
  File "<stdin>", line 4
    o.append(ph['number'])
    ^
IndentationError: expected an indented block after 'if' statement on line 3
>>>
>>> for emp in obj:
...     for ph in emp['details']['phoneNumbers']:
...             if ph['type'] == 'office' and emp['details']['address']['state']=='NY':
...                     o.append(ph['number'])
  File "<stdin>", line 4
    o.append(ph['number'])
TabError: inconsistent use of tabs and spaces in indentation
>>> for emp in obj:
...     for ph in emp['details']['phoneNumbers']:
...         if ph['type'] == 'office' and emp['details']['address']['state']=='NY':
...             o.append(ph['number'])
...
>>> o
['646 555-4567']
>>>
>>>
>>> #HTML parsing
>>> #static - requests
>>> #dynamic - selenium
>>> #HTTP automation
>>> #HTML parsing - web scrap
>>> url = "https://www.google.co.in/?gws_rd=ssl"
>>> import requests
>>> resp = requests.get(url)
>>> resp.status_code
200
>>> len(resp.text)
19073
>>> resp.text[:100]
'<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="en-IN"><head><meta cont'
>>> from bs4 import BeautifulSoup
>>> s = BeautifulSoup(resp.text, 'html.parser')
>>> s.html
<html itemscope="" itemtype="http://schema.org/WebPage" lang="en-IN"><head><meta content="text/html; charset=utf-8" http-equiv="Content-Type"/><meta content="/images/branding/googleg/1x/googleg_standard_color_128dp.png" itemprop="image"/><title>Google</title><script nonce="6mQOhbILsyTzR4b5p4mE6g">(function(){var _g={kEI:'iqvzZ4HfNaPK1sQPqomBkQ4',kEXPI:'0,202792,25,3497474,658,435,633579,78219,266577,290044,11106,5230576,40,16,16,35,36812535,25366949,8181,5929,4564,60607,6754,23878,7034,2105,740,2,2,3856,328,6225,34310,19904,9951,1341,13708,8205,3292,4134,26016,4363,28334,10903,10441,2986,5354,41,13639,1,6536,205,4106,4451,3285,3347,14019,951,2146,4617,5773,4311,2715,6040,416,1547,1623,10960,3050,2,1667,2545,6654,921,50,1635,539,2722,459,4023,1615,3212,893,55,1856,4533,3282,570,2251,116,1822,57,7,1233,316,2986,2396,354,658,609,3963,31,3,4,514,4429,1506,1570,663,2620,1083,3321,557,344,1194,512,1163,553,22,1740,1157,2386,47,1442,2213,916,800,201,209,917,355,1380,592,125,5,1403,374,46,242,1363,6,1016,208,1229,646,918,283,220,296,186,2,4,210,314,1,1067,416,263,8,4,4,1521,38,220,2499,257,20,624,601,3,12,897,2,5,2,719,268,249,2,1,2,2,2,548,124,114,31,1832,94,639,23,790,59,124,4,5,527,5,25,261,5,890,400,251,387,3,108,12,11,615,421,2,226,39,556,626,1,11,2,2,2,238,497,388,174,105,1306,5,379,67,188,95,2,81,319,513,2,173,209,30,1139,7,29,17,539,4,128,1,227,15,151,6,57,229,228,80,7,110,771,12,2,31,11,150,132,5,27,257,235,528,485,97,31,78,49,115,1164,500,815,6,284,731,920,1555,308,228,724,3,311,338,2401,21309266,18,4343,197,8,5639,1182,5,2009,2319,111,382,215,4,389,1114,259,859,4,2212,3,3762889,2244576',kBL:'GiPp',kOPI:89978449};(function(){var a;((a=window.google)==null?0:a.stvsc)?google.kEI=_g.kEI:window.google=_g;}).call(this);})();(function(){google.sn='webhp';google.kHL='en-IN';})();(function(){
var g=this||self;function k(){return window.google&&window.google.kOPI||null};var l,m=[];function n(a){for(var b;a&&(!a.getAttribute||!(b=a.getAttribute("eid")));)a=a.parentNode;return b||l}function p(a){for(var b=null;a&&(!a.getAttribute||!(b=a.getAttribute("leid")));)a=a.parentNode;return b}function q(a){/^http:/i.test(a)&&window.location.protocol==="https:"&&(google.ml&&google.ml(Error("a"),!1,{src:a,glmm:1}),a="");return a}
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search("&lei=")===-1&&(c=p(c))&&(e+="&lei="+c));var f=b.search("&cshid=")===-1&&a!=="slh";c="&zx="+Date.now().toString();g._cshid&&f&&(c+="&cshid="+g._cshid);(d=d())&&(c+="&opi="+d);return"/"+(h||"gen_204")+"?atyp=i&ct="+String(a)+"&cad="+(b+e+c)};l=google.kEI;google.getEI=n;google.getLEI=p;google.ml=function(){return null};google.log=function(a,b,d,c,h,e){e=e===void 0?k:e;d||(d=r(a,b,e,c,h));if(d=q(d)){a=new Image;var f=m.length;m[f]=a;a.onerror=a.onload=a.onabort=function(){delete m[f]};a.src=d}};google.logUrl=function(a,b){b=b===void 0?k:b;return r("",a,b)};}).call(this);(function(){google.y={};google.sy=[];var d;(d=google).x||(d.x=function(a,b){if(a)var c=a.id;else{do c=Math.random();while(google.y[c])}google.y[c]=[a,b];return!1});var e;(e=google).sx||(e.sx=function(a){google.sy.push(a)});google.lm=[];var f;(f=google).plm||(f.plm=function(a){google.lm.push.apply(google.lm,a)});google.lq=[];var g;(g=google).load||(g.load=function(a,b,c){google.lq.push([[a],b,c])});var h;(h=google).loadAll||(h.loadAll=function(a,b){google.lq.push([a,b])});google.bx=!1;var k;(k=google).lx||(k.lx=function(){});var l=[],m;(m=google).fce||(m.fce=function(a,b,c,n){l.push([a,b,c,n])});google.qce=l;}).call(this);google.f={};(function(){
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.target){var c=a.getAttribute("data-submitfalse");a=c==="1"||c==="q"&&!a.elements.q.value?!0:!1}else a=!1;a&&(b.preventDefault(),b.stopPropagation())},!0);document.documentElement.addEventListener("click",function(b){var a;a:{for(a=b.target;a&&a!==document.documentElement;a=a.parentElement)if(a.tagName==="A"){a=a.getAttribute("data-nohref")==="1";break a}a=!1}a&&b.preventDefault()},!0);}).call(this);</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}
</style><style>body,td,a,p,.h{font-family:sans-serif}body{margin:0;overflow-y:scroll}#gog{padding:3px 8px 0}td{line-height:.8em}.gac_m td{line-height:17px}form{margin-bottom:20px}.h{color:#1967d2}em{font-weight:bold;font-style:normal}.lst{height:25px;width:496px}.gsfi,.lst{font:18px sans-serif}.gsfs{font:17px sans-serif}.ds{display:inline-box;display:inline-block;margin:3px 0 4px;margin-left:4px}input{font-family:inherit}body{background:#fff;color:#000}a{color:#681da8;text-decoration:none}a:hover,a:active{text-decoration:underline}.fl a{color:#1967d2}a:visited{color:#681da8}.sblc{padding-top:5px}.sblc a{display:block;margin:2px 0;margin-left:13px;font-size:11px}.lsbb{background:#f8f9fa;border:solid 1px;border-color:#dadce0 #70757a #70757a #dadce0;height:30px}.lsbb{display:block}#WqQANb a{display:inline-block;margin:0 12px}.lsb{background:url(/images/nav_logo229.png) 0 -261px repeat-x;color:#000;border:none;cursor:pointer;height:30px;margin:0;outline:0;font:15px sans-serif;vertical-align:top}.lsb:active{background:#dadce0}.lst:focus{outline:none}</style><script nonce="6mQOhbILsyTzR4b5p4mE6g">(function(){window.google.erd={jsr:1,bv:2197,de:true,dpf:'I_j-WfbuatS9ngzk0rK8Ws-__9KgJWAqznV3f4m2uDI'};
var g=this||self;var k,l=(k=g.mei)!=null?k:1,m,p=(m=g.diel)!=null?m:0,q,r=(q=g.sdo)!=null?q:!0,t=0,u,w=google.erd,x=w.jsr;google.ml=function(a,b,d,n,e){e=e===void 0?2:e;b&&(u=a&&a.message);d===void 0&&(d={});d.cad="ple_"+google.ple+".aple_"+google.aple;if(google.dl)return google.dl(a,e,d,!0),null;b=d;if(x<0){window.console&&console.error(a,b);if(x===-2)throw a;b=!1}else b=!a||!a.message||a.message==="Error loading script"||t>=l&&!n?!1:!0;if(!b)return null;t++;d=d||{};b=encodeURIComponent;var c="/gen_204?atyp=i&ei="+b(google.kEI);google.kEXPI&&(c+="&jexpid="+b(google.kEXPI));c+="&srcpg="+b(google.sn)+"&jsr="+b(w.jsr)+
"&bver="+b(w.bv);w.dpf&&(c+="&dpf="+b(w.dpf));var f=a.lineNumber;f!==void 0&&(c+="&line="+f);var h=a.fileName;h&&(h.indexOf("-extension:/")>0&&(e=3),c+="&script="+b(h),f&&h===window.location.href&&(f=document.documentElement.outerHTML.split("\n")[f],c+="&cad="+b(f?f.substring(0,300):"No script found.")));google.ple&&google.ple===1&&(e=2);c+="&jsel="+e;for(var v in d)c+="&",c+=b(v),c+="=",c+=b(d[v]);c=c+"&emsg="+b(a.name+": "+a.message);c=c+"&jsst="+b(a.stack||"N/A");c.length>=12288&&(c=c.substr(0,12288));a=c;n||google.log(0,"",a);return a};window.onerror=function(a,b,d,n,e){u!==a&&(a=e instanceof Error?e:Error(a),d===void 0||"lineNumber"in a||(a.lineNumber=d),b===void 0||"fileName"in a||(a.fileName=b),google.ml(a,!1,void 0,!1,a.name==="SyntaxError"||a.message.substring(0,11)==="SyntaxError"||a.message.indexOf("Script error")!==-1?3:p));u=null;r&&t>=l&&(window.onerror=null)};})();</script></head><body bgcolor="#fff"><script nonce="6mQOhbILsyTzR4b5p4mE6g">(function(){var src='/images/nav_logo229.png';var iesg=false;document.body.onload = function(){window.n && window.n();if (document.images){new Image().src=src;}
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.focus();}
}
})();</script><div id="mngb"><div id="gbar"><nobr><b class="gb1">Search</b> <a class="gb1" href="https://www.google.co.in/imghp?hl=en&amp;tab=wi">Images</a> <a class="gb1" href="https://maps.google.co.in/maps?hl=en&amp;tab=wl">Maps</a> <a class="gb1" href="https://play.google.com/?hl=en&amp;tab=w8">Play</a> <a class="gb1" href="https://www.youtube.com/?tab=w1">YouTube</a> <a class="gb1" href="https://news.google.com/?tab=wn">News</a> <a class="gb1" href="https://mail.google.com/mail/?tab=wm">Gmail</a> <a class="gb1" href="https://drive.google.com/?tab=wo">Drive</a> <a class="gb1" href="https://www.google.co.in/intl/en/about/products?tab=wh" style="text-decoration:none"><u>More</u> »</a></nobr></div><div id="guser" width="100%"><nobr><span class="gbi" id="gbn"></span><span class="gbf" id="gbf"></span><span id="gbe"></span><a class="gb4" href="http://www.google.co.in/history/optout?hl=en">Web History</a> | <a class="gb4" href="/preferences?hl=en">Settings</a> | <a class="gb4" href="https://accounts.google.com/ServiceLogin?hl=en&amp;passive=true&amp;continue=https://www.google.co.in/%3Fgws_rd%3Dssl&amp;ec=GAZAAQ" id="gb_70" target="_top">Sign in</a></nobr></div><div class="gbh" style="left:0"></div><div class="gbh" style="right:0"></div></div><center><br clear="all" id="lgpd"/><div id="XjhHGf"><img alt="Google" height="92" id="hplogo" src="/images/branding/googlelogo/1x/googlelogo_white_background_color_272x92dp.png" style="padding:28px 0 14px" width="272"/><br/><br/></div><form action="/search" name="f"><table cellpadding="0" cellspacing="0"><tr valign="top"><td width="25%"> </td><td align="center" nowrap=""><input name="ie" type="hidden" value="ISO-8859-1"/><input name="hl" type="hidden" value="en-IN"/><input name="source" type="hidden" value="hp"/><input name="biw" type="hidden"/><input name="bih" type="hidden"/><div class="ds" style="height:32px;margin:4px 0"><input autocomplete="off" class="lst" maxlength="2048" name="q" size="57" style="margin:0;padding:5px 8px 0 6px;vertical-align:top;color:#000" title="Google Search" value=""/></div><br style="line-height:0"/><span class="ds"><span class="lsbb"><input class="lsb" name="btnG" type="submit" value="Google Search"/></span></span><span class="ds"><span class="lsbb"><input class="lsb" id="tsuid_iqvzZ4HfNaPK1sQPqomBkQ4_1" name="btnI" type="submit" value="I'm Feeling Lucky"/><script nonce="6mQOhbILsyTzR4b5p4mE6g">(function(){var id='tsuid_iqvzZ4HfNaPK1sQPqomBkQ4_1';document.getElementById(id).onclick = function(){if (this.form.q.value){this.checked = 1;if (this.form.iflsig)this.form.iflsig.disabled = false;}
else top.location='/doodles/';};})();</script><input name="iflsig" type="hidden" value="ACkRmUkAAAAAZ_O5mieR0Iea0aG77C3RgO8gBZJy1U1k"/></span></span></td><td align="left" class="fl sblc" nowrap="" width="25%"><a href="/advanced_search?hl=en-IN&amp;authuser=0">Advanced search</a></td></tr></table><input id="gbv" name="gbv" type="hidden" value="1"/><script nonce="6mQOhbILsyTzR4b5p4mE6g">(function(){var a,b="1";if(document&&document.getElementById)if(typeof XMLHttpRequest!="undefined")b="2";else if(typeof ActiveXObject!="undefined"){var c,d,e=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"];for(c=0;d=e[c++];)try{new ActiveXObject(d),b="2"}catch(h){}}a=b;if(a=="2"&&location.search.indexOf("&gbv=2")==-1){var f=google.gbvu,g=document.getElementById("gbv");g&&(g.value=a);f&&window.setTimeout(function(){location.href=f},0)};}).call(this);</script></form><div style="font-size:83%;min-height:3.5em"><br/><div id="gws-output-pages-elements-homepage_additional_languages__als"><style>#gws-output-pages-elements-homepage_additional_languages__als{font-size:small;margin-bottom:24px}#SIvCob{color:#474747;display:inline-block;line-height:28px;}#SIvCob a{padding:0 3px;}.H6sW5{display:inline-block;margin:0 2px;white-space:nowrap}.z4hgWe{display:inline-block;margin:0 2px}</style><div id="SIvCob">Google offered in:  <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=hi&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAY">हिन्दी</a> <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=bn&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAc">বাংলা</a> <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=te&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAg">తెలుగు</a> <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=mr&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAk">मराठी</a> <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=ta&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAo">தமிழ்</a> <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=gu&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAs">ગુજરાતી</a> <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=kn&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAw">ಕನ್ನಡ</a> <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=ml&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCA0">മലയാളം</a> <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=pa&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCA4">ਪੰਜਾਬੀ</a> </div></div></div><span id="footer"><div style="font-size:10pt"><div id="WqQANb" style="margin:19px auto;text-align:center"><a href="/intl/en/ads/">Advertising</a><a href="http://www.google.co.in/services/">Business Solutions</a><a href="/intl/en/about.html">About Google</a><a href="https://www.google.co.in/setprefdomain?prefdom=US&amp;sig=K_o2Hd53CGWeDCVE4L8daH0ahL5ng%3D" id="fehl">Google.com</a></div></div><p style="font-size:8pt;color:#70757a">© 2025 - <a href="/intl/en/policies/privacy/">Privacy</a> - <a href="/intl/en/policies/terms/">Terms</a></p></span></center><script nonce="6mQOhbILsyTzR4b5p4mE6g">(function(){window.google.cdo={height:757,width:1440};(function(){var a=window.innerWidth,b=window.innerHeight;if(!a||!b){var c=window.document,d=c.compatMode=="CSS1Compat"?c.documentElement:c.body;a=d.clientWidth;b=d.clientHeight}if(a&&b&&(a!=google.cdo.width||b!=google.cdo.height)){var e=google,f=e.log,g="/client_204?&atyp=i&biw="+a+"&bih="+b+"&ei="+google.kEI,h="",k=window.google&&window.google.kOPI||null;k&&(h+="&opi="+k);f.call(e,"","",g+h)};}).call(this);})();</script> <script nonce="6mQOhbILsyTzR4b5p4mE6g">(function(){google.xjs={basecomb:'/xjs/_/js/k\x3dxjs.hp.en.609pF5krFAo.es5.O/ck\x3dxjs.hp.Rqjv-vkRbKY.L.X.O/am\x3dAgAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAQAAAAAAAAAACABQAImBIAHAAAEAFAgAAAAAAAAAAAAAAAAJAAAAgAACAAAABAfEcAgABYBADACw/d\x3d1/ed\x3d1/dg\x3d0/ujg\x3d1/rs\x3dACT90oHc2Cv0VtCYL2_hQ7_xLRZ2Zo4beQ',basecss:'/xjs/_/ss/k\x3dxjs.hp.Rqjv-vkRbKY.L.X.O/am\x3dAgAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAQAAAAAAAAAACABQAImAIAAAAAEAFAgAAAAAAAAAAAAAAAAJAAAAgAACA/rs\x3dACT90oGKk6p2nJbezyJ76Fq3TQwJ_7S7wA',basejs:'/xjs/_/js/k\x3dxjs.hp.en.609pF5krFAo.es5.O/am\x3dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAABAAAABAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAfEcAgABYBADACw/dg\x3d0/rs\x3dACT90oFyZviCuF9v3qsNxkXz5nJTA6JOHg',excm:[]};})();</script> <script nonce="6mQOhbILsyTzR4b5p4mE6g">(function(){var u='/xjs/_/js/k\x3dxjs.hp.en.609pF5krFAo.es5.O/am\x3dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAABAAAABAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAfEcAgABYBADACw/d\x3d1/ed\x3d1/dg\x3d3/rs\x3dACT90oFyZviCuF9v3qsNxkXz5nJTA6JOHg/m\x3dsb_he,d';var st=1;var amd=1000;var mmd=0;var pod=true;var pop=true;var fp='';
var e=this||self;function f(){var a,b,d;if(b=a=(b=window.google)==null?void 0:(d=b.ia)==null?void 0:d.r.B2Jtyd)b=a.m,b=b===1||b===5;return b&&a.cbfd!=null&&a.cbvi!=null?a:void 0};function g(){var a=[u];if(!google.dp){for(var b=0;b<a.length;b++){var d=a[b],c=document.createElement("link");c.as="script";c.href=d;c.rel="preload";document.body.appendChild(c)}google.dp=!0}};google.ps===void 0&&(google.ps=[]);function h(){var a=u,b=function(){};google.lx=google.stvsc?b:function(){k(a);google.lx=b};google.bx||google.lx()}function l(a,b){b&&(a.src=b);fp&&(a.fetchPriority=fp);var d=a.onload;a.onload=function(c){d&&d(c);google.ps=google.ps.filter(function(E){return a!==E})};google.ps.push(a);document.body.appendChild(a)}google.as=l;function k(a){google.timers&&google.timers.load&&google.tick&&google.tick("load","xjsls");var b=document.createElement("script");b.onerror=function(){google.ple=1};b.onload=function(){google.ple=0};google.xjsus=void 0;l(b,a);google.aple=-1;google.dp=!0};function m(a){var b=a.getAttribute("jscontroller");return(b==="UBXHI"||b==="R3fhkb"||b==="TSZEqd")&&a.hasAttribute("data-src")}function n(){for(var a=document.getElementsByTagName("img"),b=0,d=a.length;b<d;b++){var c=a[b];if(c.hasAttribute("data-lzy_")&&Number(c.getAttribute("data-atf"))&1&&!m(c))return!0}return!1}for(var p=document.getElementsByTagName("img"),q=0,r=p.length;q<r;++q){var t=p[q];Number(t.getAttribute("data-atf"))&1&&m(t)&&(t.src=t.getAttribute("data-src"))};var w,x,y,z,A,B,C,D;function F(){google.xjsu=u;e._F_jsUrl=u;A=function(){h()};w=!1;x=(st===1||st===3)&&!!google.caft&&!n();y=f();z=(st===2||st===3)&&!!y&&!n();B=pod;D=(C=pop)&&document.prerendering}function G(){w||x||z||D||(A(),w=!0)}
setTimeout(function(){google&&google.tick&&google.timers&&google.timers.load&&google.tick("load","xjspls");F();if(x||z||D){if(x){var a=function(){x=!1;G()};google.caft(a);window.setTimeout(a,amd)}z&&(a=function(){z=!1;G()},y.cbvi.push(a),window.setTimeout(a,mmd));D&&document.addEventListener("prerenderingchange",function(){D=!1;G()},{once:!0});if(B||C)w||g()}else A()},0);})();window._ = window._ || {};window._DumpException = _._DumpException = function(e){throw e;};window._s = window._s || {};_s._DumpException = _._DumpException;window._qs = window._qs || {};_qs._DumpException = _._DumpException;(function(){var t=[2,32768,0,0,0,0,0,68157824,0,32768,805329152,304646,268435772,33619972,262144,0,0,536871488,33558528,268435456,18300,1138946,48128];window._F_toggles = window._xjs_toggles = t;})();window._F_installCss = window._F_installCss || function(css){};(function(){google.jl={bfl:0,dw:false,ine:false,injs:'none',injt:0,injth:0,injv2:false,ubm:false,uwp:true,vs:false};})();(function(){var pmc='{\x22d\x22:{},\x22sb_he\x22:{\x22client\x22:\x22heirloom-hp\x22,\x22dh\x22:true,\x22ds\x22:\x22\x22,\x22host\x22:\x22google.co.in\x22,\x22jsonp\x22:true,\x22msgs\x22:{\x22cibl\x22:\x22Clear Search\x22,\x22dym\x22:\x22Did you mean:\x22,\x22lcky\x22:\x22I\\u0026#39;m Feeling Lucky\x22,\x22lml\x22:\x22Learn more\x22,\x22psrc\x22:\x22This search was removed from your \\u003Ca href\x3d\\\x22/history\\\x22\\u003EWeb History\\u003C/a\\u003E\x22,\x22psrl\x22:\x22Remove\x22,\x22sbit\x22:\x22Search by image\x22,\x22srch\x22:\x22Google Search\x22},\x22ovr\x22:{},\x22pq\x22:\x22\x22,\x22rfs\x22:[],\x22stok\x22:\x22nqdB19A5lO4XFK4YEcAkwFpAhes\x22}}';google.pmc=JSON.parse(pmc);})();</script> </body></html>
>>> h.html.header
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'h' is not defined. Did you mean: 'ph'?
>>> s.html.header
>>> type(s.html.body)
<class 'bs4.element.Tag'>
>>> s.select("a")  # search all a tag
[<a class="gb1" href="https://www.google.co.in/imghp?hl=en&amp;tab=wi">Images</a>, <a class="gb1" href="https://maps.google.co.in/maps?hl=en&amp;tab=wl">Maps</a>, <a class="gb1" href="https://play.google.com/?hl=en&amp;tab=w8">Play</a>, <a class="gb1" href="https://www.youtube.com/?tab=w1">YouTube</a>, <a class="gb1" href="https://news.google.com/?tab=wn">News</a>, <a class="gb1" href="https://mail.google.com/mail/?tab=wm">Gmail</a>, <a class="gb1" href="https://drive.google.com/?tab=wo">Drive</a>, <a class="gb1" href="https://www.google.co.in/intl/en/about/products?tab=wh" style="text-decoration:none"><u>More</u> »</a>, <a class="gb4" href="http://www.google.co.in/history/optout?hl=en">Web History</a>, <a class="gb4" href="/preferences?hl=en">Settings</a>, <a class="gb4" href="https://accounts.google.com/ServiceLogin?hl=en&amp;passive=true&amp;continue=https://www.google.co.in/%3Fgws_rd%3Dssl&amp;ec=GAZAAQ" id="gb_70" target="_top">Sign in</a>, <a href="/advanced_search?hl=en-IN&amp;authuser=0">Advanced search</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=hi&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAY">हिन्दी</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=bn&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAc">বাংলা</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=te&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAg">తెలుగు</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=mr&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAk">मराठी</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=ta&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAo">தமிழ்</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=gu&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAs">ગુજરાતી</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=kn&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAw">ಕನ್ನಡ</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=ml&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCA0">മലയാളം</a>, <a href="https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&amp;hl=pa&amp;source=homepage&amp;sa=X&amp;ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCA4">ਪੰਜਾਬੀ</a>, <a href="/intl/en/ads/">Advertising</a>, <a href="http://www.google.co.in/services/">Business Solutions</a>, <a href="/intl/en/about.html">About Google</a>, <a href="https://www.google.co.in/setprefdomain?prefdom=US&amp;sig=K_o2Hd53CGWeDCVE4L8daH0ahL5ng%3D" id="fehl">Google.com</a>, <a href="/intl/en/policies/privacy/">Privacy</a>, <a href="/intl/en/policies/terms/">Terms</a>]
>>> #Tag - .name , .attars, .text
>>> [ a.attrs['href'] for a in s.select("a")]
['https://www.google.co.in/imghp?hl=en&tab=wi', 'https://maps.google.co.in/maps?hl=en&tab=wl', 'https://play.google.com/?hl=en&tab=w8', 'https://www.youtube.com/?tab=w1', 'https://news.google.com/?tab=wn', 'https://mail.google.com/mail/?tab=wm', 'https://drive.google.com/?tab=wo', 'https://www.google.co.in/intl/en/about/products?tab=wh', 'http://www.google.co.in/history/optout?hl=en', '/preferences?hl=en', 'https://accounts.google.com/ServiceLogin?hl=en&passive=true&continue=https://www.google.co.in/%3Fgws_rd%3Dssl&ec=GAZAAQ', '/advanced_search?hl=en-IN&authuser=0', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=hi&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAY', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=bn&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAc', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=te&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAg', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=mr&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAk', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=ta&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAo', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=gu&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAs', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=kn&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCAw', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=ml&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCA0', 'https://www.google.co.in/setprefs?sig=0_oOe0g10-iCR_Qq21hlej9ut9JVc%3D&hl=pa&source=homepage&sa=X&ved=0ahUKEwiBzJ_i3cWMAxUjpZUCHapEIOIQ2ZgBCA4', '/intl/en/ads/', 'http://www.google.co.in/services/', '/intl/en/about.html', 'https://www.google.co.in/setprefdomain?prefdom=US&sig=K_o2Hd53CGWeDCVE4L8daH0ahL5ng%3D', '/intl/en/policies/privacy/', '/intl/en/policies/terms/']
>>> [ a.attrs['href'] for a in s.select("a.gb1")]
['https://www.google.co.in/imghp?hl=en&tab=wi', 'https://maps.google.co.in/maps?hl=en&tab=wl', 'https://play.google.com/?hl=en&tab=w8', 'https://www.youtube.com/?tab=w1', 'https://news.google.com/?tab=wn', 'https://mail.google.com/mail/?tab=wm', 'https://drive.google.com/?tab=wo', 'https://www.google.co.in/intl/en/about/products?tab=wh']
>>> #pip install requests beautifulsoup4
>>>

































































































































































































hello world
hello world
hello world
hello world
hello world



i am fahar

1hello world
2hello world
3hello world
4hello world
5hello world

